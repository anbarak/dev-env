# Local aliases
# Aliases for GNU coreutils commands with additional preferences
alias ls='gls --color=auto'
alias dir='gdir'
alias vdir='gvdir'
alias cp='cp -i'  # Prompt before overwrite
alias mv='mv -i'  # Prompt before overwrite
alias rm='trash -v'  # Move to trash instead of delete
alias mkdir='gmkdir -p'  # Create directories recursively
alias rmdir='grmdir'
alias chown='gchown'
alias chgrp='gchgrp'
alias chmod='gchmod'
alias touch='gtouch'
alias ln='gln'
alias install='ginstall'
alias du='gdu'
alias df='gdf'
alias pwd='gpwd'  # Alias to use GNU coreutils pwd
alias date='gdate'
alias uname='guname'
alias head='ghead'
alias tail='gtail'
alias cat='gcat'
alias tac='gtac'
alias echo='gecho'
alias tee='gtee'
alias wc='gwc'
alias who='gwho'
alias id='gid'
alias groups='ggroups'
alias stty='gstty'
alias env='genv'
alias sort='gsort'
alias cut='gcut'
alias paste='gpaste'
alias sed='gsed'
alias grep='ggrep --color=auto'
alias find='gfind'
alias locate='glocate'
alias xargs='gxargs'
alias split='gsplit'
alias uniq='guniq'
alias join='gjoin'
alias comm='gcomm'
alias diff='/opt/homebrew/opt/diffutils/bin/diff'
alias patch='gpatch'
alias tr='gtr'
alias expand='gexpand'
alias unexpand='gunexpand'
alias fmt='gfmt'
alias fold='gfold'
alias pr='gpr'
alias tsort='gtsort'
alias nl='gnl'
alias sort='gsort'
alias numfmt='gnumfmt'
alias seq='gseq'
alias yes='gyes'
alias basename='gbasename'
alias dirname='gdirname'
alias realpath='grealpath'

# Additional custom aliases
alias ll='gls -lAh'         # Detailed list with hidden files, human-readable sizes
alias la='gls -A'           # List all files except . and ..
alias l='gls -CF'           # List directories with /
alias ..='cd ..'           # Move up one directory
alias ...='cd ../..'       # Move up two directories
alias cls='clear'          # Clear terminal
alias h='history'          # Show history
alias rmf='trash -rf'      # Force move to trash
alias rmd='trash -d'       # Move directory to trash

# Log file navigation and manipulation
alias tailf='tail -f'                      # Follow the tail of a file
alias tail100='tail -n 100'                # Show the last 100 lines of a file
alias tail200='tail -n 200'                # Show the last 200 lines of a file
alias tail500='tail -n 500'                # Show the last 500 lines of a file
alias tail1k='tail -n 1000'                # Show the last 1000 lines of a file
alias tail2k='tail -n 2000'                # Show the last 2000 lines of a file
alias tailf100='tail -f -n 100'            # Follow last 100 lines of a file
alias tailf200='tail -f -n 200'            # Follow last 200 lines of a file
alias tailf500='tail -f -n 500'            # Follow last 500 lines of a file
alias tailf1k='tail -f -n 1000'            # Follow last 1000 lines of a file
alias tailf2k='tail -f -n 2000'            # Follow last 2000 lines of a file
alias tailerr='tail -f /var/log/error.log' # Follow error log file
alias tailsys='tail -f /var/log/syslog'    # Follow system log file
alias tailauth='tail -f /var/log/auth.log' # Follow authentication log file
      
# System operations
alias update='sudo apt update && sudo apt upgrade -y'  # Update system (Ubuntu/Debian)
alias df='df -h'                                       # Show disk usage
alias du='du -h -d 1'                                  # Show directory sizes
alias top='htop'                                       # Use htop if available
alias path='echo -e ${PATH//:/\\n}'                    # Show PATH variable

# Networking
alias ip='ip -c -br addr'                              # Show IP addresses
alias ports='netstat -tulanp'                          # Show listening ports
alias ping='ping -c 5'                                 # Ping with 5 packets

# SSH
alias ssh_server='ssh user@server.com'                 # Quick SSH to server

# Curl aliases
alias curl='curl -s'                      # Make curl silent by default
alias curlget='curl -X GET'               # Perform a GET request
alias curlpost='curl -X POST'             # Perform a POST request
alias curlput='curl -X PUT'               # Perform a PUT request
alias curldelete='curl -X DELETE'         # Perform a DELETE request
alias curlheader='curl -I'                # Fetch headers only
alias curlpatch='curl -X PATCH -H "Content-Type: application/json"' # Send a PATCH request with JSON body
alias curlhead='curl -X HEAD'             # Send a HEAD request
alias curllocal='curl --unix-socket /var/run/docker.sock' # Interact with Docker API using Unix socket
alias curlgoogle='curl https://www.google.com' # Check Google connectivity
alias curltime='curl -w "@curl-format.txt" -o /dev/null -s' # Measure response time with custom format file
alias curlproxy='curl -x'                 # Send request via proxy
alias curlupload='curl -T'                # Upload a file
alias curlstatus='curl -o /dev/null -s -w "%{http_code}\n"' # Check HTTP status code
alias curljsonpretty='curl -s -H "Accept: application/json" | jq .' # Pretty print JSON response with jq

# OpenSSL aliases and commands for certificate management
alias ssl='openssl'
alias sslgenrsa='openssl genrsa -out'
alias sslreq='openssl req'
alias sslx509='openssl x509'
alias sslverify='openssl verify'
alias sslpkcs12='openssl pkcs12'
alias sslbase64='openssl base64'
alias openssl_gen_csr='openssl req -out server.csr -new -newkey rsa:2048 -nodes -keyout server.key' # Generate CSR
alias openssl_gen_self_signed='openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout server.key -out server.crt' # Generate self-signed cert
alias openssl_view_cert='openssl x509 -in server.crt -text -noout' # View certificate details
alias openssl_verify_cert='openssl verify server.crt' # Verify a certificate
alias openssl_pem_to_der='openssl x509 -outform der -in server.pem -out server.der' # Convert PEM to DER
alias openssl_pem_to_pkcs12='openssl pkcs12 -export -out server.pfx -inkey server.key -in server.crt' # Convert PEM to PKCS12
alias openssl_der_to_pem='openssl x509 -inform der -in server.der -out server.pem' # Convert DER to PEM
alias openssl_pkcs12_to_pem='openssl pkcs12 -in server.pfx -out server.pem -nodes' # Convert PKCS12 to PEM
alias openssl_extract_pk='openssl pkcs12 -in server.pfx -nocerts -out server.key' # Extract private key from PKCS12
alias openssl_extract_cert='openssl pkcs12 -in server.pfx -clcerts -nokeys -out server.crt' # Extract certificate from PKCS12
alias openssl_encrypt='openssl enc -aes-256-cbc -salt -in file.txt -out file.enc' # Encrypt file
alias openssl_decrypt='openssl enc -aes-256-cbc -d -in file.enc -out file.txt' # Decrypt file
alias openssl_gen_password='openssl rand -base64 12' # Generate random password
alias openssl_version='openssl version' # Check OpenSSL version
alias openssl_commands='openssl list-standard-commands' # List OpenSSL commands
alias openssl_ciphers='openssl ciphers -v' # Check supported ciphers
alias openssl_digests='openssl list -digest-commands' # Check supported digest algorithms

# Function to convert certificate format
function openssl_convert_cert() {
    if [ $# -ne 2 ]; then
        echo "Usage: openssl_convert_cert <input_certificate> <output_certificate>"
        return 1
    fi
    openssl x509 -in $1 -out $2
}

# Function to generate a self-signed certificate
function ssl_self_signed_cert() {
    if [ -z "$1" ]; then
        echo "Please provide a filename prefix for the certificate."
        return 1
    fi
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout "$1.key" -out "$1.crt"
}

# Function to decode base64-encoded string
function ssl_decode_base64() {
    if [ -z "$1" ]; then
        echo "Please provide a base64-encoded string."
        return 1
    fi
    echo "$1" | openssl base64 -d
}

# Aliases to switch environments quickly
alias aws-activate='switch-cloud aws'
alias gcp-activate='switch-cloud gcp'
alias azure-activate='switch-cloud azure'

# Function to switch cloud environments
function switch-cloud {
  case "$1" in
    aws)
      source $HOME/.config/clouds/aws.sh
      export CLOUD="aws"
      ;;
    gcp)
      source $HOME/.config/clouds/gcp.sh
      export CLOUD="gcp"
      ;;
    azure)
      source $HOME/.config/clouds/azure.sh
      export CLOUD="azure"
      ;;
    *)
      echo "Unknown cloud provider: $1"
      ;;
  esac
}

# Docker commands
alias dk='docker'
alias dkb='docker build'                               # Build image
alias dkc='docker-compose'                             # Docker Compose
alias dki='docker images'                              # List images
alias dkp='docker ps'                                  # List running containers
alias dkpa='docker ps -a'                              # List all containers
alias dkr='docker run'                                 # Run container
alias dkrm='docker rm'                                 # Remove container
alias dkrmi='docker rmi'                               # Remove image
alias dkl='docker logs'                                # Show logs
alias docker_stop_all='docker stop $(docker ps -aq)'   # Stop all running Docker containers
alias docker_rm_all='docker rm $(docker ps -aq)'       # Remove all stopped Docker containers
alias docker_rmi_all='docker rmi $(docker images -q)'  # Remove all Docker images
alias docker_prune='docker system prune -af'           # Remove all unused Docker data

# Kubernetes commands
alias kc='kubectl'
alias kctx='kubectl config use-context'                       # Switch context
alias kns='kubectl config set-context --current --namespace'  # Set namespace
alias kget='kubectl get'                                      # Get resources
alias kdesc='kubectl describe'                                # Describe resources
alias klogs='kubectl logs'                                    # Show logs
alias kapply='kubectl apply -f'                               # Apply configuration
alias kdel='kubectl delete -f'                                # Delete configuration
alias kexec='kubectl exec -it'                                # Execute command in pod
alias k9s='k9s'                                               # K9s Kubernetes CLI

# Terraform commands
alias tf='terraform'
alias tfa='terraform apply'                            # Apply configuration
alias tfp='terraform plan'                             # Show execution plan
alias tfd='terraform destroy'                          # Destroy infrastructure
alias tfv='terraform validate'                         # Validate configuration
alias tff='terraform fmt'                              # Format configuration
alias tfi='terraform init'                             # Initialize Terraform
alias tfu='terraform state show'                       # Show resource state
alias tfw='terraform workspace'                        # Terraform workspace
alias tfw_list='terraform workspace list'              # List Terraform workspaces
alias tfw_new='terraform workspace new'                # Create new Terraform workspace
alias tfw_select='terraform workspace select'          # Select Terraform workspace

# Go development aliases
alias gobuild='go build'                   # Compile packages and dependencies
alias goinstall='go install'               # Compile and install packages and dependencies
alias gotest='go test'                     # Run tests
alias goclean='go clean'                   # Remove object files
alias godep='go mod tidy'                  # Add missing and remove unused modules
alias gomod='go mod'                       # Dependency module maintenance
alias gofmt='gofmt -w'                     # Format Go code
alias golint='golint'                      # Run golint
alias govet='go vet'                       # Run go vet
alias goget='go get'                       # Download and install packages and dependencies
alias gocover='go test -coverprofile=coverage.out && go tool cover -html=coverage.out'  # Generate coverage report
alias goreplace='go mod edit -replace'     # Edit replace directives
alias goclone='go get -d'                  # Download modules to GOPATH but don't build
alias goenv='go env'                       # View Go environment information
alias gorelease='goreleaser'               # Create releases and package Go projects
alias gomodv='go mod verify'               # Verify dependencies have expected content

# Python development aliases
alias py='python3'                     # Use python3 as default Python interpreter
alias py2='python2'                    # Use python2 as default Python interpreter
alias ipy='ipython'                    # Launch IPython interactive shell
alias pip='python3 -m pip'             # Use pip for Python package management
alias pip2='python2 -m pip'            # Use pip for Python2 package management
alias venv='python3 -m venv'           # Create Python virtual environments
alias pyfmt='autopep8 --in-place'      # Format Python code using autopep8
alias pylint='python3 -m pylint'       # Run pylint for static code analysis
alias pytest='python3 -m pytest'       # Run pytest for testing
alias pyvenv='source venv/bin/activate' # Activate Python virtual environment
alias pyrun='python3'                  # Run Python script
alias pydoc='python3 -m pydoc'         # Use pydoc for Python documentation
alias pyprof='python3 -m cProfile'     # Profile Python code

# Git aliases
alias gst='git status'                          # Show the working tree status
alias gl='git log --oneline --graph --decorate' # Show the commit history in a graphical way
alias ga='git add'                              # Add file contents to the index
alias gaa='git add .'                           # Add all modified files to the index
alias gb='git branch'                           # List, create, or delete branches
alias gba='git branch -a'                       # List all remote and local branches
alias gbd='git branch -d'                       # Delete a branch
alias gc='git commit -m'                        # Record changes to the repository
alias gca='git commit --amend'                  # Amend the last commit
alias gco='git checkout'                        # Switch branches or restore working tree files
alias gcb='git checkout -b'                     # Create and switch to a new branch
alias gd='git diff'                             # Show changes between commits, commit and working tree, etc.
alias gds='git diff --staged'                   # Show changes between the index and the HEAD
alias gf='git fetch'                            # Download objects and refs from another repository
alias gfa='git fetch --all'                     # Fetch all remotes
alias gfo='git fetch origin'                    # Fetch from the 'origin' remote
alias gp='git push'                             # Update remote refs along with associated objects
alias gpa='git push --all'                      # Push all branches to the remote repository
alias gpo='git push origin'                     # Push to the 'origin' remote
alias gpl='git pull'                            # Fetch from and integrate
alias gplo='git pull origin'                    # Pull changes from the 'origin' remote
alias gpr='git pull --rebase'                   # Rebase local changes on top of the upstream branch
alias gm='git merge'                            # Join two or more development histories together
alias grh='git reset --hard'                    # Reset the current HEAD to the specified state
alias grs='git reset --soft'                    # Reset the current HEAD to the specified state, keeping staged changes
alias gcl='git clone'                           # Clone a repository into a new directory
alias gss='git stash save'                      # Stash changes in a dirty working directory
alias gsp='git stash pop'                       # Apply stashed changes to the working directory
alias gstl='git stash list'                     # List all stashed changes
alias grb='git rebase'                          # Reapply commits on top of another base tip
alias grba='git rebase --abort'                 # Abort a rebase
alias grbc='git rebase --continue'              # Continue a rebase after resolving conflicts
alias gclean='git clean -fd'                    # Remove untracked files from the working directory
alias gprune='git remote prune origin'          # Prune all stale remote-tracking branches
alias gundo='git reset HEAD~1'                  # Undo the last commit

# GitHub aliases
alias gh='gh'                    # GitHub CLI entry point
alias ghpr='gh pr create'        # Create a pull request
alias ghip='gh issue create'     # Create a new issue
alias ghr='gh repo'              # Manage repositories
alias ghb='gh repo browse'       # Open the GitHub repository in the browser

# Bitbucket aliases
alias bb='bb'                    # Bitbucket CLI entry point
alias bbpr='bb pr create'        # Create a pull request
alias bbissue='bb issue create'   # Create a new issue
alias bbb='bb browse'            # Open the Bitbucket repository in the browser

# AWS CLI commands
alias aws_profile='aws configure --profile'                                              # Switch profile
alias ec2_ls='aws ec2 describe-instances'                                                # List EC2 instances
alias ec2_start='aws ec2 start-instances --instance-ids'                                 # Start EC2 instance
alias ec2_stop='aws ec2 stop-instances --instance-ids'                                   # Stop EC2 instance
alias s3_ls='aws s3 ls'                                                                  # List S3 buckets
alias s3_cp='aws s3 cp'                                                                  # Copy files to/from S3
alias s3_sync='aws s3 sync'                                                              # Sync files with S3
alias lambda_ls='aws lambda list-functions'                                              # List Lambda functions  
alias fargate_run='aws ecs run-task --launch-type FARGATE'                               # Run Fargate task
alias fargate_deploy='ecs-cli compose --file path/to/your/docker-compose.yml service up' # Deploy AWS Fargate service
alias ssh_ec2='ssh -i path/to/your/ec2_key.pem ec2-user@your-ec2-instance'               # SSH into EC2 instance
  
# GCP CLI commands
alias gcp_auth='gcloud auth login'                     # Authenticate GCP
alias gcp_config='gcloud config configurations list'   # List configurations
alias gcp_set='gcloud config set'                      # Set configuration
alias gcp_project='gcloud config set project'          # Set project
alias gcp_zones='gcloud compute zones list'            # List zones
alias gcp_instances='gcloud compute instances list'    # List instances

# Homebrew commands
alias brewup='brew update; brew upgrade; brew cleanup'    # Update Homebrew and upgrade all packages

# Tmux commands
alias tmux='tmux -2'                                      # Force tmux to assume 256-color terminal
alias ta='tmux attach -t'                                 # Attach to a tmux session
alias tls='tmux ls'                                       # List tmux sessions
alias tks='tmux kill-session -t'                          # Kill tmux session
alias tka='tmux kill-server'                              # Kill tmux server

# Custom aliases
alias edit_zshrc='vim ~/.zshrc'                  # Edit .zshrc 
alias src_zshrc='source ~/.zshrc'                # Source .zshrc 
alias edit_zshrc_local='vim ~/.zshrc.local'      # Edit .zshrc.local
alias edit_zshrc_plugins='vim ~/.zshrc.plugins'  # Edit .zshrc.plugins
alias edit_tmux='vim ~/.tmux.conf'               # Edit .tmux.conf  
alias src_tmux='tmux source ~/.tmux.conf'        # Source .tmux.conf'        

# Vim aliases
alias vi='vim'
alias v='vim'
alias vimdiff='vim -d'                           # Open Vim in diff mode
alias vimrc='vim ~/.vimrc'                       # Edit ~/.vimrc
alias vimplug='vim ~/.vim/autoload_plugins.vim'  # Edit Vim plugins autoload file
alias vimplugconf="vim ~/.vim/plugin_config.vim" # Edit Vim Plugins configuration file  
alias vimtmp='vim -u NONE -N'                    # Open Vim with no plugins and in nocompatible mode
alias vimcd='vim -c "cd %:p:h"'                  # Open Vim and change to the directory of the current file
alias vimtab='vim --remote-tab'                  # Open the file in a new tab in an existing Vim instance
alias vimsplit='vim --remote-silent'             # Open file in a new split in an existing Vim instance

