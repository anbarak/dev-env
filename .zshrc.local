###################################################################################
# This is a recommended file to store your own customizations and plugin          # 
# management. It helps keep your main ~/.zshrc file clean. You can source         #
# this file from your ~/.zshrc to activate the settings within.                   #
###################################################################################

# Set the fpath for Homebrew completions
fpath=($(brew --prefix)/share/zsh-completions $fpath)

# Ensure ~/.Brewfile is updated every time you install/uninstall something
brew() {
    command brew "$@"
    if [[ "$1" == "install" || "$1" == "upgrade" || "$1" == "uninstall" ]]; then
        echo "Updating Brewfile..."
        brew bundle dump --file=~/.Brewfile --force
        yadm add ~/.Brewfile
        yadm commit -m "Updated Brewfile"
        yadm push
    fi
}

# Source git-completion file
#if [ -f "$HOME/.git-completion.zsh" ]; then
#  source "$HOME/.git-completion.zsh"
#fi

# Source aliases
if [ -f "$HOME/.zshrc.aliases" ]; then
  source "$HOME/.zshrc.aliases"
fi

# Enable bash completion for zsh
autoload bashcompinit
bashcompinit

# MySQL autocompletion
#if [ -f "$(brew --prefix)/share/mysql/mysql_autocomplete" ]; then
#  source "$(brew --prefix)/share/mysql/mysql_autocomplete"
#else
#  # Dynamically find the latest version-specific path
#  latest_mysql_autocomplete=$(find /opt/homebrew/Cellar/mysql -name "mysql_autocomplete" | sort | tail -n 1)
#  if [ -f "$latest_mysql_autocomplete" ]; then
#    source "$latest_mysql_autocomplete"
#  fi
#fi

# Ensure completion system is initialized
autoload -Uz compinit
compinit

# Enable clipboard support for Vim
set clipboard=unnamedplus

# Environment variables (optional)
# Add environment variables specific to your zsh environment here
# (Consider using separate files for system-wide environment variables)
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

# Function to check for Oh My Zsh updates and prompt user
check_omz_update() {
    echo "Checking for Oh My Zsh updates..."
    if omz update | grep -q 'updated successfully'; then
        echo "Oh My Zsh updates are available. Would you like to update? (y/n)"
        read answer
        if [[ $answer == 'y' ]]; then
            omz update
        else
            echo "Update skipped."
        fi
    else
        echo "Oh My Zsh is already up to date."
    fi
}

# Set the terminal title to show the user, hostname, and current directory
function set_terminal_title() {
  case $TERM in
    xterm*|rxvt*)
      # For tmux sessions
      if [ -n "$TMUX" ]; then
        local TMUX_INFO="#[fg=yellow]#S #[fg=cyan]#W"
      fi
      # Set the title
      print -Pn "\e]2;%n@%m: %~ $TMUX_INFO\a"
      ;;
  esac
}

# Call the function before each prompt
precmd_functions+=set_terminal_title

# Alias to trigger update check
alias checkupdates='check_omz_update'

# Docker
export DOCKER_DEFAULT_PLATFORM=linux/amd64

# Go 
export GOPATH=$HOME/go
export GOROOT=$(brew --prefix golang)/libexec
export PATH=$PATH:$GOPATH/bin:$GOROOT/bin

# Python
if [[ ":$PYTHONPATH:" != *":$HOME/code/cf/my/insurance-services-utils/scripts:"* ]]; then
    export PYTHONPATH=$PYTHONPATH:"$HOME/code/cf/my/insurance-services-utils/scripts"
fi

# Add Google Cloud SDK to PATH
if [ -f "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc" ]; then
  source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
fi

# Enable shell command completion for gcloud
if [ -f "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc" ]; then
  source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
fi

# Add Krew to PATH
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# Source k plugin
if [ -f "$ZSH/custom/plugins/k/k.sh" ]; then
  source "$ZSH/custom/plugins/k/k.sh"
fi

# Load cloud profiles and configurations
if [ -f "$HOME/.config/clouds/load_all.sh" ]; then
  source "$HOME/.config/clouds/load_all.sh" centerfield
fi

# Plugin management (using plugin array)
if [ -f "$HOME/.zshrc.plugins" ]; then
  source "$HOME/.zshrc.plugins"
fi

# Add asdf to shell configuration
if [ -f "$(brew --prefix)/libexe/asdf.sh" ]; then
  source "$(brew --prefix)/libexe/asdf.sh"
fi

eval "$(direnv hook zsh)"

# Sourcing additional configuration files (optional)
# source ~/.oh-my-zsh/custom/themes/mytheme.zsh  # Example: Source a theme file

